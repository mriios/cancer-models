(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[165],{8080:function(e,t,o){"use strict";o.d(t,{Hn:function(){return getAllModelData},LD:function(){return getAvailableDataColumns},M4:function(){return getMolecularData},Td:function(){return getModelPubmedIds},l1:function(){return getMolecularDataDownload},q7:function(){return getPublicationData},uh:function(){return getModelMolecularDataDetails}});var a=o(6546);async function getCellModelData(e){let t=await fetch("".concat("https://www.cancermodels.org/api","/cell_model?model_id=eq.").concat(e));if(!t.ok)throw Error("Network response was not ok");return t.json().then(e=>(delete e[0].model_id,(0,a.eV)(e[0])))}async function getModelDetailsMetadata(e,t){let o=await fetch("".concat("https://www.cancermodels.org/api","/search_index?external_model_id=eq.").concat(e,"&data_source=eq.").concat(t));if(!o.ok)throw Error("Network response was not ok");return o.json().then(e=>{if(!Array.isArray(e)||0===e.length)throw Error("No model metadata found");let t=e[0];return(0,a.eV)(t)})}async function getProviderId(e){let t=await fetch("".concat("https://www.cancermodels.org/api","/search_index?external_model_id=eq.").concat(e,"&select=data_source"));if(!t.ok)throw Error("Network response was not ok");return t.json().then(e=>e[0].data_source)}async function getModelImages(e){let t=await fetch("".concat("https://www.cancermodels.org/api","/search_index?external_model_id=eq.").concat(e,"&select=model_images"));if(!t.ok)throw Error("Network response was not ok");return t.json().then(e=>{var t;return(null===(t=e[0].model_images)||void 0===t?void 0:t.length)?e[0].model_images.map(e=>(0,a.eV)(e)):[]})}async function getModelKnowledgeGraph(e){let t=await fetch("".concat("https://www.cancermodels.org/api","/model_information?external_model_id=eq.").concat(e,"&select=knowledge_graph"));if(!t.ok)throw Error("Network response was not ok");return t.json().then(e=>{var t,o,n,r,i;let l=null===(t=e[0])||void 0===t?void 0:t.knowledge_graph,s={edges:null!==(r=null==l?void 0:null===(o=l.edges)||void 0===o?void 0:o.map(e=>(0,a.eV)(e)))&&void 0!==r?r:[],nodes:null!==(i=null==l?void 0:null===(n=l.nodes)||void 0===n?void 0:n.map(e=>(0,a.eV)(e)))&&void 0!==i?i:[]};return s})}async function getModelPubmedIds(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1?arguments[1]:void 0,o=await fetch("".concat("https://www.cancermodels.org/api","/model_information?external_model_id=eq.").concat(e,"&data_source=eq.").concat(t,"&select=publication_group(pubmed_ids)"));if(!o.ok)throw Error("Network response was not ok");let a=await o.json(),n=a[0].publication_group||{},r=n.pubmed_ids||"";return r.replaceAll(" ","").split(",")}async function getPublicationData(e){if(""!==e){let t=await fetch("https://www.ebi.ac.uk/europepmc/webservices/rest/article/MED/".concat(e.replace("PMID:",""),"?resultType=lite&format=json"));if(!t.ok)throw Error("Network response was not ok");return t.json().then(e=>Object.fromEntries(["title","pubYear","authorString","journalTitle","pmid","doi"].filter(t=>t in e.result).map(t=>[t,e.result[t]])))}}async function getModelExtLinks(e,t){if(0!==e&&!e)return{};let o=await fetch("".concat("https://www.cancermodels.org/api","/model_information?id=eq.").concat(e,"&select=contact_people(email_list),contact_form(form_url),source_database(database_url),other_model_links"));if(!o.ok)throw Error("Network response was not ok");return o.json().then(e=>{var o,a,n,r,i,l;let s=e[0],c=null!==(r=s.other_model_links)&&void 0!==r?r:[],d=c.reduce((e,t)=>(e[t.type]||(e[t.type]=[]),e[t.type].push({...t,resourceLabel:t.resource_label,linkLabel:t.link_label}),e),{}),p=(null===(o=s.contact_form)||void 0===o?void 0:o.form_url)?s.contact_form.form_url:"mailto:".concat(null!==(i=null===(a=s.contact_people)||void 0===a?void 0:a.email_list)&&void 0!==i?i:"","?subject=").concat(encodeURIComponent(t)),m=null!==(l=null===(n=s.source_database)||void 0===n?void 0:n.database_url)&&void 0!==l?l:"";return{contactLink:p,sourceDatabaseUrl:m,externalModelLinksByType:d}})}async function getModelQualityData(e){if(0!==e&&!e)return[];let t=await fetch("".concat("https://www.cancermodels.org/api","/quality_assurance?model_id=eq.").concat(e));if(!t.ok)throw Error("Network response was not ok");return t.json().then(e=>e.map(e=>(0,a.eV)(e)))}async function getMolecularData(e){if(!e)return[];let t=await fetch("".concat("https://www.cancermodels.org/api","/model_molecular_metadata?model_id=eq.").concat(e));if(!t.ok)throw Error("Network response was not ok");return t.json().then(e=>e.map(e=>(0,a.eV)(e)))}async function getAvailableDataColumns(e,t){switch(t){case"copy number alteration":t="cna";break;case"bio markers":t="biomarker"}let o=await fetch("".concat("https://www.cancermodels.org/api","/available_molecular_data_columns?data_source=eq.").concat(e,"&molecular_characterization_type=eq.").concat(t));if(!o.ok)throw Error("Network response was not ok");return o.json().then(e=>e[0].not_empty_cols)}async function getModelMolecularDataDetails(e,t,o,a,n,r,i){if(!e)return[];let l="".concat("https://www.cancermodels.org/api","/").concat({mutation:"mutation_data_table",expression:"expression_data_table","copy number alteration":"cna_data_table","bio markers":"biomarker_data_table"}[t],"?molecular_characterization_id=eq.").concat(e);o&&(l+="&text=ilike.*".concat(o,"*")),l+="&limit=".concat(n,"&offset=").concat((a-1)*n),r&&(l+="&order=".concat(r),i&&(l+=".".concat(i)));let s=await fetch(l,{headers:{Prefer:"count=exact"}});if(!s.ok)throw Error("Network response was not ok");return s.json().then(e=>{var t;return[parseInt((null===(t=s.headers.get("Content-Range"))||void 0===t?void 0:t.split("/")[1])||"0"),e.map(e=>(delete e.molecular_characterization_id,delete e.text,e))]})}async function getMolecularDataDownload(e){if(!e.molecularCharacterizationId)return[];let t={mutation:"mutation_data_table",expression:"expression_data_table","copy number alteration":"cna_data_table","bio markers":"biomarker_data_table"}[e.dataType],o="".concat("https://www.cancermodels.org/api","/").concat(t,"?molecular_characterization_id=eq.").concat(e.molecularCharacterizationId),a=await fetch(o,{headers:{Prefer:"count=exact"}});if(!a.ok)throw Error("Network response was not ok");return a.json().then(t=>t.map(t=>(delete t.molecular_characterization_id,delete t.text,delete t.external_db_links,t.sampleID=e.sampleId,t)))}async function getModelEngraftments(e,t){if(0!==e&&!e||"PDX"!==t)return[];let o=await fetch("".concat("https://www.cancermodels.org/api","/xenograft_model_specimen?model_id=eq.").concat(e,"&select=host_strain(name, nomenclature),engraftment_site(name),engraftment_type(name),engraftment_sample_type(name),engraftment_sample_state(name),passage_number"));if(!o.ok)throw Error("Network response was not ok");return o.json().then(e=>e.map(e=>{var t,o,n;let{host_strain:r,engraftment_site:i,engraftment_type:l,engraftment_sample_type:s,engraftment_sample_state:c,...d}=e;return{...(0,a.eV)(d),hostStrain:null!==(t=null==r?void 0:r.name)&&void 0!==t?t:"",hostStrainNomenclature:null!==(o=null==r?void 0:r.nomenclature)&&void 0!==o?o:"",engraftmentSite:i.name,engraftmentType:l.name,engraftmentSampleType:s.name,engraftmentSampleState:null!==(n=null==c?void 0:c.name)&&void 0!==n?n:""}}))}let addDataToEntries=(e,t,o)=>{var a,n;e.response=t,o&&(null!==(n=e.passage_range)&&void 0!==n||(e.passage_range=o)),null===(a=e.external_db_links)||void 0===a||a.sort((e,t)=>e.resource_label.localeCompare(t.resource_label))},getPatientTreatment=async e=>{if(0!==e&&!e)return[];let t=await fetch("".concat("https://www.cancermodels.org/api","/patient_treatment?model_id=eq.").concat(e,"&select=*"));if(!t.ok)throw Error("Network response was not ok");return t.json().then(e=>e.map(e=>(e.entries.forEach(t=>{addDataToEntries(t,e.response)}),(0,a.eV)(e.entries))))};async function getModelDrugDosing(e){if(!e)return[];let t=await fetch("".concat("https://www.cancermodels.org/api","/dosing_studies?model_id=eq.").concat(e,"&select=*"));if(!t.ok)throw Error("Network response was not ok");return t.json().then(e=>e.map(e=>(e.entries.forEach(t=>{addDataToEntries(t,e.response,e.passage_range)}),(0,a.eV)(e.entries))))}async function getModelImmuneMarkers(e){let t=await fetch("".concat("https://www.cancermodels.org/api","/immunemarker_data_extended?model_id=eq.").concat(e));if(!t.ok)throw Error("Network response was not ok");return t.json().then(e=>{let t=e.reduce((e,t)=>{let o=e.find(e=>e.sampleId===t.sample_id&&e.type===t.marker_type),a={details:t.essential_or_additional_details,name:t.marker_name,value:[t.marker_value]};if(o){let e=o.markers.find(e=>e.name===t.marker_name);e&&e.value?e.value.push(t.marker_value):o.markers.push(a)}else e.push({sampleId:t.sample_id,type:t.marker_type,markers:[a]});return e},[]),addMissingNames=(t,o)=>{let a=[...new Set(e.map(e=>e.marker_type===o&&e.marker_name).filter(e=>e))];a.forEach(e=>{t.markers.some(t=>t.name===e)||t.type!==o||t.markers.push({details:"",name:e,value:[]})})};return t.forEach(e=>{addMissingNames(e,"HLA type"),addMissingNames(e,"Model Genomics"),e.markers.sort((e,t)=>e.name.localeCompare(t.name))}),t})}let getAllModelData=async(e,t)=>{var o,a;let n=null!=t?t:await getProviderId(e),r=await getModelDetailsMetadata(e,n),i=await getModelImmuneMarkers(e),l=r.pdcmModelId,s=await getModelExtLinks(l,e),c=await getMolecularData(e),d=r.modelType,p=await getModelEngraftments(l,d),m=await getModelDrugDosing(l),u=await getPatientTreatment(l),h=await getModelQualityData(l),g=await getModelImages(e),f=await getModelKnowledgeGraph(e),_=r.scores.pdxMetadataScore,v={};return"PDX"!==d&&(v=await getCellModelData(l),_=r.scores.inVitroMetadataScore),{metadata:{cancerGrade:r.cancerGrade,cancerStage:r.cancerStage,cancerSystem:r.cancerSystem,collectionSite:r.collectionSite,histology:r.histology,licenseName:null!==(o=r.licenseName)&&void 0!==o?o:"",licenseUrl:null!==(a=r.licenseUrl)&&void 0!==a?a:"",modelId:e,modelType:r.modelType,modelAvailable:r.modelAvailabilityBoolean,patientAge:r.patientAge,patientEthnicity:r.patientEthnicity,patientSex:r.patientSex,patientId:r.patientId,pdcmModelId:l,primarySite:r.primarySite,providerId:n,providerName:r.providerName,score:null!=_?_:0,tumourType:r.tumourType,dateSubmitted:r.dateSubmitted,cancerGradingSystem:r.cancerGradingSystem,cancerStagingSystem:r.cancerStagingSystem,datasetAvailable:Array.isArray(r.datasetAvailable)?r.datasetAvailable:[],externalModelId:r.externalModelId,patientAgeAtInitialDiagnosis:r.patientAgeAtInitialDiagnosis,patientEthnicityAssessmentMethod:r.patientEthnicityAssessmentMethod,patientHistory:r.patientHistory,patientInitialDiagnosis:r.patientInitialDiagnosis,patientSampleCollectionDate:r.patientSampleCollectionDate,patientSampleCollectionEvent:r.patientSampleCollectionEvent,patientSampleId:r.patientSampleId,patientSampleMonthsSinceCollection:r.patientSampleMonthsSinceCollection1,patientSampleSharable:r.patientSampleSharable,patientSampleTreatedAtCollection:r.patientSampleTreatedAtCollection,patientSampleTreatedPriorToCollection:r.patientSampleTreatedPriorToCollection,patientSampleVirologyStatus:r.patientSampleVirologyStatus,pdxModelPublications:r.pdxModelPublications,projectName:r.projectName,viewDataAt:r.viewDataAt},extLinks:s,molecularData:c,immuneMarkers:i,engraftments:p,cellModelData:v,drugDosing:m,patientTreatment:u,qualityData:h,knowledgeGraph:f,modelImages:g,publications:[]}}},6198:function(e,t,o){"use strict";var a=o(5893);t.Z=e=>{let{className:t,isPill:o}=e;return o?(0,a.jsx)("div",{className:"".concat(t," bg-white br-round text-red py-1 px-2"),children:(0,a.jsx)("p",{className:"text-small m-0",children:"Model not available"})}):(0,a.jsx)("p",{className:"".concat(t," text-small m-0"),children:(0,a.jsx)("i",{children:"Model not available"})})}},5578:function(e,t,o){"use strict";var a=o(5893),n=o(6330),r=o(6308),i=o.n(r);t.Z=e=>(0,a.jsxs)("div",{className:e.containerClassName,id:e.id,children:[(0,a.jsx)(n.Z,{content:(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("span",{className:"text-bold",children:[e.score,"%"]}),(0,a.jsx)("p",{className:"text-small mb-0 mt-1 ".concat(i().QualityBadge_toolTip_p),children:"Score related to the amount of information available about the model, not the quality of the model."})]}),children:(0,a.jsx)("meter",{className:e.className,min:0,max:100,value:e.score,high:70,low:30,optimum:90,style:e.style})}),(0,a.jsx)("p",{className:"text-small m-0",children:"Model characterisation"})]})},6330:function(e,t,o){"use strict";var a=o(5893),n=o(7294),r=o(8398),i=o(5311),l=o.n(i);t.Z=e=>{var t;let[o,i]=(0,n.useState)(!1);return(0,a.jsx)("div",{className:"".concat(null!==(t=e.className)&&void 0!==t?t:""," ").concat(l().Tooltip),children:(0,a.jsxs)("div",{onMouseOver:()=>i(!0),onMouseLeave:()=>i(!1),className:"w-min pr-2 position-md-relative",children:[o&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:l().Tooltip_content,children:e.content}),(0,a.jsx)(r.Z,{className:l().Tooltip_arrow})]}),(0,a.jsx)("span",{className:l().Tooltip_children,children:e.children})]})})}},3765:function(e,t,o){"use strict";o.d(t,{Gr:function(){return a},Ym:function(){return r},pB:function(){return n}});let a=[{element:"#searchBar",popover:{title:"Cancer diagnosis search",description:"Search bar where you can input and search by cancer diagnosis Eg. Melanoma.",side:"bottom",align:"center"}},{element:"#tour_filters",popover:{title:"Search results filters",description:"Narrow your search results to suit your needs using one or multiple filter options.",side:"right",align:"center"}},{element:"#sortBy",popover:{title:"Change sorting order",description:"Sort the current search results by different criteria.",side:"left",align:"center"}},{element:"#tour_searchResult",popover:{title:"Search result",description:"Individual cancer model based on your search query and/or filtering.",side:"top",align:"center"}},{element:"#tour_searchResult",popover:{description:"Check the bottom right checkbox ('Add to compare') to continue.",side:"top",align:"center"}},{element:"#tour_compareCard",popover:{title:"Compare",description:"Includes the models you've chosen to compare. Keep checking more boxes to add and then compare.",side:"left",align:"center"}},{popover:{description:"More detailed information can be found at our <a href='/tutorials' target='_blank'>tutorials page</a>.",side:"left",align:"center"}}],n=[{element:"#tour_modelsToCompare",popover:{title:"Models to compare",description:"This are the models that have their data being compared. You can remove models you don't want to compare anymore. At least 2 models are needed at all times.",side:"top",align:"center"}},{element:"#tour_compare-metadata",popover:{title:"Patient / tumour metadata",description:"This section provides information about the patient and tumour. It includes clinical information such as patient demographics, and tumour characteristics.",side:"top",align:"center"}},{element:"#tour_compare-engraftment",popover:{title:"PDX Model Engraftment",description:"This section provides details about the successful engraftment of Patient-Derived Xenograft (PDX) models such as the establishment of the model, engraftment success rates, and relevant details about the transplantation process.",side:"top",align:"center"}},{element:"#tour_compare-derivation",popover:{title:"In-vitro model derivation",description:"This section provides details about the successful model development of Patient-Derived {Cell line/Organoid} (based on the model type) models such as the growth properties, growth media and supplements, and other relevant details for model development.",side:"top",align:"center"}},{element:"#tour_compare-qualityControl",popover:{title:"Model quality control",description:"This section provides information on methods/protocols used to ensure the quality and reliability of the data and models.",side:"top",align:"center"}},{element:"#tour_compare-availableData",popover:{title:"Available data",description:"Data that's available for this models. More data for this sections can be found in each individual model page.",side:"top",align:"center"}},{element:"#tour_compare-buttons",popover:{title:"Compare buttons",description:"Click any of the corresponding model buttons to view more detailed information",side:"top",align:"center"}},{popover:{description:"More detailed information can be found at our <a href='/tutorials' target='_blank'>tutorials page</a>.",side:"left",align:"center"}}],r=[{element:"#tour_model-histology",popover:{title:"Model histology",side:"top",align:"center"}},{element:"#tour_model-id",popover:{title:"Model id",description:"Model unique identifier given by CancerModels.Org",side:"top",align:"center"}},{element:"#tour_model-type",popover:{title:"Model type",side:"top",align:"center"}},{element:"#tour_model-score",popover:{title:"Model score",description:"Score related to the amount of information available about the model, not the quality of the model.",side:"top",align:"center"}},{element:"#tour_model-providerInfo",popover:{title:"Model provider",description:"Provider information and contact",side:"top",align:"center"}},{element:"#metadata",popover:{title:"Model metadata",description:"This section provides information about the patient and tumour. It includes clinical information such as patient demographics, and tumour characteristics.",side:"top",align:"center"}},{element:"#engraftments",popover:{title:"Model engraftment",description:"This section provides details about the successful engraftment of Patient-Derived Xenograft (PDX) models such as the establishment of the model, engraftment success rates, and relevant details about the transplantation process.",side:"top",align:"center"}},{element:"#derivation",popover:{title:"In-vitro model derivation",description:"This section provides details about the successful model development of Patient-Derived {Cell line/Organoid} (based on the model type) models such as the growth properties, growth media and supplements, and other relevant details for model development.",side:"top",align:"center"}},{element:"#quality-control",popover:{title:"Model quality control",description:"This section provides information on methods/protocols used to ensure the quality and reliability of the data and models.",side:"top",align:"center"}},{element:"#molecular-data",popover:{title:"Model molecular data",description:"This section provides information about molecular characterization of cancer models, such as expression, copy number alteration, mutation, biomarkers data. This provides an insight into the genetic makeup of tumour. ",side:"top",align:"center"}},{element:"#immune-markers",popover:{title:"Model immune markers",description:"This section provides information about the immune response within the tumour microenvironment.  ",side:"top",align:"center"}},{element:"#dosing-studies",popover:{title:"Model dosing studies",description:"This section provides information about the drug dosage and response of the drug in the cancer models, which provides insights into understanding the drug efficacy.",side:"top",align:"center"}},{element:"#patient-treatment",popover:{title:"Model patient treatment",description:"This section provides information about the treatment dosage and response of the treatment in the cancer models, which provides insights into understanding the treatment efficacy.",side:"top",align:"center"}},{element:"#histology-images",popover:{title:"Model histology images",description:"This section provides histology images associated with models, which provides deeper understanding of the tumour morphology.",side:"top",align:"center"}},{element:"#publications",popover:{title:"Model publications",description:"This section provides relevant publications associated with the cancer models.",side:"top",align:"center"}},{popover:{description:"More detailed information can be found at our <a href='/tutorials' target='_blank'>tutorials page</a>.",side:"left",align:"center"}}]},6308:function(e){e.exports={QualityBadge_toolTip_p:"QualityBadge_QualityBadge_toolTip_p__dA0ty"}},5311:function(e){e.exports={Tooltip:"Tooltip_Tooltip__NGDQV",Tooltip_content:"Tooltip_Tooltip_content__3oVKG",Tooltip_arrow:"Tooltip_Tooltip_arrow__7Y9xV",Tooltip_children:"Tooltip_Tooltip_children__o5YLo"}}}]);